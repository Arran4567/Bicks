@using Bicks.Models
@model Bicks.Areas.ProductManagement.ViewModels.ProductViewModel

@{
    ViewData["Title"] = "Edit";
    ViewData["Heading"] = "Edit Product";
}

<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Product.ID" />
            <div class="form-group">
                <label asp-for="Product.Name" class="control-label"></label>
                <input asp-for="Product.Name" class="form-control" />
                <span asp-validation-for="Product.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.PricePerKg" class="control-label"></label>
                <input asp-for="Product.PricePerKg" class="form-control" />
                <span asp-validation-for="Product.PricePerKg" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.Category" class="control-label"></label>
                <select id="CompanyType" asp-for="Product.Category.ID">
                    @foreach (Category category in Model.Categories)
                    {
                        <option value="@category.ID">@category.Name</option>
                    }
                </select>
                <span asp-validation-for="Product.Category" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-danger" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="ProductList">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
