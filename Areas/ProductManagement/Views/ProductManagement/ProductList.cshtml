@using Enums
@{
    ViewData["Title"] = "Product List";
    ViewData["Heading"] = "Products";
}
@model IEnumerable<Bicks.Models.Product>

@section Toolbar {
    <li class="nav-item toolbar-item">
        <a asp-area="ProductManagement" asp-controller="ProductManagement" asp-action="CreateProduct">
            <i class="fa fa-plus"></i>
            <p class="">Add Product</p>
        </a>
    </li>
}

@section Scripts{
    <script>
        $(document).ready(function () {
            $('#product-table').DataTable({
                "aaSorting": [],
                columnDefs: [{
                    orderable: false,
                    targets: [3, 4]
                }]
            });
        });
    </script>
}

<section class="data-section">
    <h2 class="section-header">Clients</h2>
    <div class="section-body">
        <div class="text-center">
            <table id="product-table" class="table table-striped" cellspacing="0" width="100%">
                <thead>
                    <tr hidden>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                    </tr>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SubCategory)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.PricingMethod)
                        </th>
                        <th style="width: 20%" colspan="2">Options</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SubCategory.Name)
                            </td>
                            <td>
                                @{
                                    string pricingMethod = "";
                                    switch (item.PricingMethod)
                                    {
                                        case 0:
                                            pricingMethod = "Price Per Kg";
                                            break;
                                        case 1:
                                            pricingMethod = "Price Per Unit";
                                            break;
                                    }
                                }
                                @pricingMethod
                            </td>
                            <td>
                                <a asp-area="ProductManagement" asp-controller="ProductManagement" asp-action="EditProduct" asp-route-id="@item.ID">
                                    <i class="fa fa-pen"></i>
                                    <p class="">Edit Product</p>
                                </a>
                            </td>
                            <td>
                                <a asp-area="ProductManagement" asp-controller="ProductManagement" asp-action="DeleteProduct" asp-route-id="@item.ID">
                                    <i class="fa fa-trash"></i>
                                    <p class="">Delete Product</p>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</section>