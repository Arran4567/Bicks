@using Bicks.Models
@model Bicks.Areas.Sales.ViewModels.SaleViewModel

@{
    ViewData["Title"] = "Create Sales";
    ViewData["Heading"] = "Create Sales";
}

@section Toolbar {
    <li class="nav-item toolbar-item">
        <a href="javascript:submitForm()">
            <i class="fa fa-check"></i>
            <p class="">Finish Sale</p>
        </a>
    </li>
    <li class="nav-item toolbar-item">
        <a asp-area="Sales" asp-controller="Sales" asp-action="SalesList">
            <i class="fa fa-times"></i>
            <p class="">Cancel</p>
        </a>
    </li>
}

@section Scripts {
    <script type="text/javascript">
        function submitForm() {
            $('#create-sale-form').submit();
        }
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<div class="row">
    <form method="post" id="create-sale-form">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label asp-for="Sale.Client" class="control-label"></label>
            <select asp-for="Sale.Client.ID">
                @foreach (Client client in Model.ClientList)
                {
                    <option value="@client.ID">@client.Name</option>
                }
            </select>
            <span asp-validation-for="Sale.Client" class="text-danger"></span>
        </div>
        @Html.EditorFor(m => m.InvoiceItems)
    </form>
</div>