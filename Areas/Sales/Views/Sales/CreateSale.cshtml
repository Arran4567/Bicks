@using Bicks.Models
@model Bicks.Areas.Sales.ViewModels.SaleViewModel

@{
    ViewData["Title"] = "Create Sales";
    ViewData["Heading"] = "Create Sales";
}

@section Toolbar {
    <li class="nav-item toolbar-item">
        <a href="javascript:submitForm()">
            <i class="fa fa-check"></i>
            <p class="">Finish Sale</p>
        </a>
    </li>
    <li class="nav-item toolbar-item">
        <a asp-area="Sales" asp-controller="Sales" asp-action="SalesList">
            <i class="fa fa-times"></i>
            <p class="">Cancel</p>
        </a>
    </li>
}

@section Scripts {
    <script type="text/javascript">
        function submitForm() {
            $('#create-sale-form').submit();
        }
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<form method="post" id="create-sale-form">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group">
        <label asp-for="Sale.Client" class="control-label"></label>
        <select asp-for="Sale.Client.ID">
            @foreach (Client client in Model.ClientList)
            {
                <option value="@client.ID">@client.Name</option>
            }
        </select>
        <span asp-validation-for="Sale.Client" class="text-danger"></span>
    </div>
    @{
        List<Category> categories = new List<Category>();
        foreach (InvoiceItem invoiceItem in Model.InvoiceItems)
        {
            if (!categories.Any(item => item.ID == invoiceItem.Product.Category.ID))
            {
                categories.Add(invoiceItem.Product.Category);
            }
        }
    }
    @{
        foreach (Category category in categories)
        {
            <div class="row">
                <div class="col-12 col-xl-12">
                    <section class="data-section">
                        <h2 class="section-header">@category.Name</h2>
                        <div class="section-body">
                            <div class="row">
                                @for (int i = 0; i < Model.InvoiceItems.Count; i++)
                                {
                                    if (Model.InvoiceItems[i].Product.Category.ID == category.ID)
                                    {
                                        <div class="col-2">
                                            <div class="card">
                                                @Html.EditorFor(m => m.InvoiceItems[i])
                                            </div>
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                    </section>
                </div>
            </div>
        }
    }
</form>